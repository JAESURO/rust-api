use mongodb::{bson::doc, options::{ClientOptions, ServerApi, ServerApiVersion}, Client};
use std::env;
use dotenv::dotenv;

pub async fn connect_to_mongo() -> mongodb::error::Result<Client> {
    dotenv().ok(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ)
    let mongo_uri = env::var("MONGOURI").expect("MONGOURI must be set in environment variables");

    println!("üîå Connecting to MongoDB...");

    let mut client_options = ClientOptions::parse(&mongo_uri).await?;
    let server_api = ServerApi::builder().version(ServerApiVersion::V1).build();
    client_options.server_api = Some(server_api);

    let client = Client::with_options(client_options)?;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (ping)
    client.database("admin").run_command(doc! {"ping": 1}, None).await?;
    println!("‚úÖ Successfully connected to MongoDB!");

    Ok(client)
}